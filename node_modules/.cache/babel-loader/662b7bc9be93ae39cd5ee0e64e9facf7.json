{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\src\\\\sigtaucolostate-master\\\\sigtaucolostate\\\\src\\\\components\\\\Members.js\";\n// this is the members table. just work within the array to update the data\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nvar CustomTableCell = withStyles(function (theme) {\n  return {\n    head: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.common.white,\n      fontSize: 18\n    },\n    body: {\n      fontSize: 14\n    }\n  };\n})(TableCell);\nvar NumberCustomTableCell = withStyles(function (theme) {\n  return {\n    head: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.common.white,\n      fontSize: 40\n    },\n    body: {\n      fontSize: 14\n    }\n  };\n})(TableCell);\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      margin: '0 auto',\n      width: '75%',\n      height: 700,\n      marginBottom: theme.spacing.unit * 5,\n      overflowX: 'auto'\n    },\n    table: {\n      minWidth: 700\n    },\n    row: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.background.default\n      }\n    },\n    header: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      marginBottom: theme.spacing.unit * 5,\n      marginTop: theme.spacing.unit * 5\n    },\n    founder: {\n      marginRight: '15px',\n      position: 'relative',\n      left: '10px',\n      padding: '1%',\n      borderRadius: '5px',\n      color: theme.palette.common.white,\n      backgroundColor: theme.palette.primary.main\n    }\n  };\n};\n\nvar id = 0;\n\nfunction createData(name, group, founder) {\n  id += 1; // this is the line format for the table data below. do not put the ID in,\n\n  return {\n    id: id,\n    name: name,\n    group: group,\n    founder: founder\n  };\n}\n/* this is the members table data, just create a new row for the new members\nyou should be able to figure out what's going on in this array\n  */\n\n\nvar rows = [createData('Michael Trimble', 'Alpha', 'Founder'), createData('Nathanael Patterson', 'Alpha', 'Founder'), createData('Connor Clark', 'Alpha', 'Founder'), createData('Logan Dodd', 'Alpha', 'Founder'), createData('Nicholas Early', 'Alpha', 'Founder'), createData('Ryan Mellin', 'Alpha', 'Founder'), createData('Kyler Miller', 'Alpha', 'Founder'), createData('Cooper Murphy', 'Alpha', 'Founder'), createData('Anthony Philips', 'Alpha', 'Founder'), createData('Corey Schoeber', 'Alpha', 'Founder'), createData('Secher Wagner', 'Alpha', 'Founder'), createData('Tyler Franks', 'Beta', 'Founder'), createData('Omar Gomez', 'Beta', 'Founder'), createData('Thomas Grassia', 'Beta', 'Founder'), createData('Wilson \"Taber\" Slayden', 'Beta', 'Founder'), createData('Sean Spindel', 'Beta', 'Founder'), createData('Tyler Haver', 'Gamma', 'Founder'), createData('Ty Guerra', 'Gamma', 'Founder'), createData('Eddy Lopez', 'Gamma', 'Founder'), createData('Scott Morgan', 'Gamma', 'Founder'), createData('Matt Nelson', 'Gamma', 'Founder'), createData('Jerod Arnold', 'Delta', 'Founder'), createData('Samuel \"Sam\" Bailey', 'Delta', 'Founder'), createData('Joshua \"Josh\" Brown', 'Delta', 'Founder'), createData('Connor Davis', 'Delta', 'Founder'), createData('Christopher \"Christo\" Erker', 'Delta', 'Founder'), createData('Matthew Keenan', 'Delta', 'Founder'), createData('Carlos \"Los\" Matejka', 'Delta', 'Founder'), createData('Nicholas Pontejos', 'Delta', 'Founder'), createData('Henrique Rio', 'Delta', 'Founder'), createData('Connor Scott', 'Delta', 'Founder')];\n\nfunction Members(props) {\n  var classes = props.classes;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    align: \"center\",\n    variant: \"h4\",\n    marked: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Members\")), React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    style: {\n      position: 'sticky'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(CustomTableCell, {\n    align: \"left\",\n    padding: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Number\"), React.createElement(CustomTableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Name\"), React.createElement(CustomTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Class\"), React.createElement(CustomTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(CustomTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }), React.createElement(CustomTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, rows.map(function (row) {\n    return React.createElement(TableRow, {\n      className: classes.row,\n      key: row.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(NumberCustomTableCell, {\n      component: \"th\",\n      scope: \"row\",\n      padding: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, row.id), React.createElement(CustomTableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, row.founder && React.createElement(\"span\", {\n      className: classes.founder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, row.founder), row.name), React.createElement(CustomTableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, row.group), React.createElement(CustomTableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, row.fat), React.createElement(CustomTableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, row.carbs), React.createElement(CustomTableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, row.protein));\n  })))));\n}\n\nMembers.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Members);","map":{"version":3,"sources":["C:\\dev\\src\\sigtaucolostate-master\\sigtaucolostate\\src\\components\\Members.js"],"names":["Paper","withStyles","Table","TableBody","TableCell","TableHead","TableRow","Typography","PropTypes","React","CustomTableCell","theme","head","backgroundColor","palette","primary","main","color","common","white","fontSize","body","NumberCustomTableCell","styles","root","margin","width","height","marginBottom","spacing","unit","overflowX","table","minWidth","row","background","default","header","display","flexDirection","alignItems","marginTop","founder","marginRight","position","left","padding","borderRadius","id","createData","name","group","rows","Members","props","classes","map","fat","carbs","protein","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["// this is the members table. just work within the array to update the data\n\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.common.white,\n    fontSize: 18,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\nconst NumberCustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.common.white,\n    fontSize: 40,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst styles = theme => ({\n  root: {\n    margin: '0 auto',\n    width: '75%',\n    height: 700,\n    marginBottom: theme.spacing.unit * 5,\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n  row: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n  header: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginBottom: theme.spacing.unit * 5,\n    marginTop: theme.spacing.unit * 5,\n  },\n  founder: {\n    marginRight: '15px',\n    position: 'relative',\n    left: '10px',\n    padding: '1%',\n    borderRadius: '5px',\n    color: theme.palette.common.white,\n    backgroundColor: theme.palette.primary.main,\n  },\n});\n\nlet id = 0;\nfunction createData(name, group, founder) {\n  id += 1;\n  // this is the line format for the table data below. do not put the ID in,\n  return { id, name, group, founder };\n}\n/* this is the members table data, just create a new row for the new members\nyou should be able to figure out what's going on in this array\n  */\n\nconst rows = [\n  createData('Michael Trimble', 'Alpha', 'Founder'),\n  createData('Nathanael Patterson', 'Alpha', 'Founder'),\n  createData('Connor Clark', 'Alpha', 'Founder'),\n  createData('Logan Dodd', 'Alpha', 'Founder'),\n  createData('Nicholas Early', 'Alpha', 'Founder'),\n  createData('Ryan Mellin', 'Alpha', 'Founder'),\n  createData('Kyler Miller', 'Alpha', 'Founder'),\n  createData('Cooper Murphy', 'Alpha', 'Founder'),\n  createData('Anthony Philips', 'Alpha', 'Founder'),\n  createData('Corey Schoeber', 'Alpha', 'Founder'),\n  createData('Secher Wagner', 'Alpha', 'Founder'),\n  createData('Tyler Franks', 'Beta', 'Founder'),\n  createData('Omar Gomez', 'Beta', 'Founder'),\n  createData('Thomas Grassia', 'Beta', 'Founder'),\n  createData('Wilson \"Taber\" Slayden', 'Beta', 'Founder'),\n  createData('Sean Spindel', 'Beta', 'Founder'),\n  createData('Tyler Haver', 'Gamma', 'Founder'),\n  createData('Ty Guerra', 'Gamma', 'Founder'),\n  createData('Eddy Lopez', 'Gamma', 'Founder'),\n  createData('Scott Morgan', 'Gamma', 'Founder'),\n  createData('Matt Nelson', 'Gamma', 'Founder'),\n  createData('Jerod Arnold', 'Delta', 'Founder'),\n  createData('Samuel \"Sam\" Bailey', 'Delta', 'Founder'),\n  createData('Joshua \"Josh\" Brown', 'Delta', 'Founder'),\n  createData('Connor Davis', 'Delta', 'Founder'),\n  createData('Christopher \"Christo\" Erker', 'Delta', 'Founder'),\n  createData('Matthew Keenan', 'Delta', 'Founder'),\n  createData('Carlos \"Los\" Matejka', 'Delta', 'Founder'),\n  createData('Nicholas Pontejos', 'Delta', 'Founder'),\n  createData('Henrique Rio', 'Delta', 'Founder'),\n  createData('Connor Scott', 'Delta', 'Founder'),\n];\n\nfunction Members(props) {\n  const { classes } = props;\n\n  return (\n    <div>\n      <div className={classes.header}>\n        <Typography align=\"center\" variant=\"h4\" marked=\"center\">\n          Members\n        </Typography>\n      </div>\n      <Paper className={classes.root}>\n        <Table className={classes.table}>\n          <TableHead style={{ position: 'sticky' }}>\n            <TableRow>\n              <CustomTableCell align=\"left\" padding=\"checkbox\">\n                Number\n              </CustomTableCell>\n              <CustomTableCell>Name</CustomTableCell>\n              <CustomTableCell align=\"right\">Class</CustomTableCell>\n              <CustomTableCell align=\"right\" />\n              <CustomTableCell align=\"right\" />\n              <CustomTableCell align=\"right\" />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map(row => (\n              <TableRow className={classes.row} key={row.id}>\n                <NumberCustomTableCell\n                  component=\"th\"\n                  scope=\"row\"\n                  padding=\"checkbox\"\n                >\n                  {row.id}\n                </NumberCustomTableCell>\n                <CustomTableCell align=\"left\">\n                  {row.founder && (\n                    <span className={classes.founder}>{row.founder}</span>\n                  )}\n                  {row.name}\n                </CustomTableCell>\n                <CustomTableCell align=\"right\">{row.group}</CustomTableCell>\n                <CustomTableCell align=\"right\">{row.fat}</CustomTableCell>\n                <CustomTableCell align=\"right\">{row.carbs}</CustomTableCell>\n                <CustomTableCell align=\"right\">{row.protein}</CustomTableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Paper>\n    </div>\n  );\n}\n\nMembers.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Members);\n"]},"metadata":{},"sourceType":"module"}